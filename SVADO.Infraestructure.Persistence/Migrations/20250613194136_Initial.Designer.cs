// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SADVO.Infraestructure.Persistence.Contexts;

#nullable disable

namespace SADVOApp.Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(SADVOAppContext))]
    [Migration("20250613194136_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.AlianzaPolitica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoAlianza")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartidoDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoOrigenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoDestinoId");

                    b.HasIndex("PartidoOrigenId");

                    b.ToTable("AlianzasPoliticas", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("FotoPath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoId");

                    b.ToTable("Candidatos", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.CandidatoPuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoId");

                    b.HasIndex("PuestoElectivoId");

                    b.HasIndex("CandidatoId", "PuestoElectivoId", "PartidoId")
                        .IsUnique();

                    b.ToTable("CandidatosPuestos", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Ciudadano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<bool>("Havotado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Cedula")
                        .IsUnique();

                    b.ToTable("Ciudadanos", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Eleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoEleccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre", "Fecha")
                        .IsUnique();

                    b.ToTable("Elecciones", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.PartidoPolitico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Siglas")
                        .IsUnique();

                    b.ToTable("PartidosPoliticos", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.PuestoElectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("PuestosElectivos", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.UsuarioPartido", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("PartidoId");

                    b.ToTable("UsuariosPartidos", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Voto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("CiudadanoId")
                        .HasColumnType("int");

                    b.Property<int>("EleccionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVoto")
                        .HasColumnType("datetime2");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("EleccionId");

                    b.HasIndex("PuestoElectivoId");

                    b.ToTable("Votos", (string)null);
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.AlianzaPolitica", b =>
                {
                    b.HasOne("SADVOApp.Core.Domain.Entities.PartidoPolitico", "PartidoDestino")
                        .WithMany()
                        .HasForeignKey("PartidoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVOApp.Core.Domain.Entities.PartidoPolitico", "PartidoOrigen")
                        .WithMany()
                        .HasForeignKey("PartidoOrigenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartidoDestino");

                    b.Navigation("PartidoOrigen");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Candidato", b =>
                {
                    b.HasOne("SADVOApp.Core.Domain.Entities.PartidoPolitico", "Partido")
                        .WithMany("Candidatos")
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.CandidatoPuesto", b =>
                {
                    b.HasOne("SADVOApp.Core.Domain.Entities.Candidato", "Candidato")
                        .WithMany("CandidatosPorPuesto")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVOApp.Core.Domain.Entities.PartidoPolitico", "Partido")
                        .WithMany()
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVOApp.Core.Domain.Entities.PuestoElectivo", "PuestoElectivo")
                        .WithMany("Candidatos")
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Partido");

                    b.Navigation("PuestoElectivo");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.UsuarioPartido", b =>
                {
                    b.HasOne("SADVOApp.Core.Domain.Entities.PartidoPolitico", "Partido")
                        .WithMany("Usuarios")
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVOApp.Core.Domain.Entities.Usuario", "Usuario")
                        .WithOne("UsuarioPartido")
                        .HasForeignKey("SADVOApp.Core.Domain.Entities.UsuarioPartido", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Voto", b =>
                {
                    b.HasOne("SADVOApp.Core.Domain.Entities.Candidato", "Candidato")
                        .WithMany()
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVOApp.Core.Domain.Entities.Ciudadano", "Ciudadano")
                        .WithMany("Votos")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SADVOApp.Core.Domain.Entities.Eleccion", "Eleccion")
                        .WithMany("Votos")
                        .HasForeignKey("EleccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SADVOApp.Core.Domain.Entities.PuestoElectivo", "PuestoElectivo")
                        .WithMany()
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Ciudadano");

                    b.Navigation("Eleccion");

                    b.Navigation("PuestoElectivo");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Candidato", b =>
                {
                    b.Navigation("CandidatosPorPuesto");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Ciudadano", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Eleccion", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.PartidoPolitico", b =>
                {
                    b.Navigation("Candidatos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.PuestoElectivo", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("SADVOApp.Core.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("UsuarioPartido");
                });
#pragma warning restore 612, 618
        }
    }
}
